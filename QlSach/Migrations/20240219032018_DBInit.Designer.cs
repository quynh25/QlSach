// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QlSach.Data;

#nullable disable

namespace QlSach.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240219032018_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QlSach.Model.ChuDe", b =>
                {
                    b.Property<int>("MaChuDe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChuDe"), 1L, 1);

                    b.Property<int>("SachMaSach")
                        .HasColumnType("int");

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChuDe");

                    b.HasIndex("SachMaSach");

                    b.ToTable("ChuDes");
                });

            modelBuilder.Entity("QlSach.Model.CTHoaDon", b =>
                {
                    b.Property<int>("MaDH")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<float>("DonGia")
                        .HasColumnType("real");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDH", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("CTHoaDones");
                });

            modelBuilder.Entity("QlSach.Model.DonHang", b =>
                {
                    b.Property<int>("MaDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDH"), 1L, 1);

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TTDH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDH");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("QlSach.Model.KhachHang", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("DonHangMaDH")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.HasIndex("DonHangMaDH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("QlSach.Model.NhaXuatBan", b =>
                {
                    b.Property<int>("MaNXB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNXB"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SachMaSach")
                        .HasColumnType("int");

                    b.Property<string>("TenNXB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNXB");

                    b.HasIndex("SachMaSach");

                    b.ToTable("NhaXuatBans");
                });

            modelBuilder.Entity("QlSach.Model.Sach", b =>
                {
                    b.Property<int>("MaSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSach"), 1L, 1);

                    b.Property<float>("GiaBan")
                        .HasColumnType("real");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSach");

                    b.ToTable("Saches");
                });

            modelBuilder.Entity("QlSach.Model.TacGia", b =>
                {
                    b.Property<int>("MaTacGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTacGia"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTacGia");

                    b.ToTable("TacGias");
                });

            modelBuilder.Entity("QlSach.Model.ThamGia", b =>
                {
                    b.Property<int>("MaTacGia")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTacGia", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("ThamGias");
                });

            modelBuilder.Entity("QlSach.Model.ChuDe", b =>
                {
                    b.HasOne("QlSach.Model.Sach", "Sach")
                        .WithMany("ChuDes")
                        .HasForeignKey("SachMaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QlSach.Model.CTHoaDon", b =>
                {
                    b.HasOne("QlSach.Model.DonHang", "DonHang")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("MaDH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QlSach.Model.Sach", "Sach")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QlSach.Model.KhachHang", b =>
                {
                    b.HasOne("QlSach.Model.DonHang", "DonHang")
                        .WithMany("KhachHangs")
                        .HasForeignKey("DonHangMaDH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("QlSach.Model.NhaXuatBan", b =>
                {
                    b.HasOne("QlSach.Model.Sach", "Sach")
                        .WithMany("NhaXuatBans")
                        .HasForeignKey("SachMaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QlSach.Model.ThamGia", b =>
                {
                    b.HasOne("QlSach.Model.Sach", "Sach")
                        .WithMany("ThamGias")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QlSach.Model.TacGia", "TacGia")
                        .WithMany("ThamGias")
                        .HasForeignKey("MaTacGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");

                    b.Navigation("TacGia");
                });

            modelBuilder.Entity("QlSach.Model.DonHang", b =>
                {
                    b.Navigation("CTHoaDons");

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("QlSach.Model.Sach", b =>
                {
                    b.Navigation("CTHoaDons");

                    b.Navigation("ChuDes");

                    b.Navigation("NhaXuatBans");

                    b.Navigation("ThamGias");
                });

            modelBuilder.Entity("QlSach.Model.TacGia", b =>
                {
                    b.Navigation("ThamGias");
                });
#pragma warning restore 612, 618
        }
    }
}
